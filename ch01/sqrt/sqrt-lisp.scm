#lang sicp

(define (average x y)
  (/ (+ x y) 2))
(average 3.0 4)
(define (square x) (* x x))
(define (improve guess x)
  (average guess (/ x guess)))
(define (sqrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x)
                 x)))
(define (good-enough? guess x)
  (< (abs (- (square guess) x)) 0.001))
(define (sqrt x)
  (sqrt-iter 1.0 x))
(sqrt 9)
(sqrt 2)
(sqrt 3)
(sqrt 5)
(sqrt 100)
(sqrt 4096)
(sqrt 8100)
(sqrt 10000)
